{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AcceptMesgLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/formSubmit-production-acceptMesg"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "production",
                  "formSubmit",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/formSubmit-production-acceptMesg:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/formSubmit-production-acceptMesg:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "formSubmit",
              "production",
              "us-east-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AcceptMesgLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sls-lambda-deploys-dev",
          "S3Key": "serverless/formSubmit/production/1537077371653-2018-09-16T05:56:11.653Z/deploy-package.zip"
        },
        "FunctionName": "formSubmit-production-acceptMesg",
        "Handler": "FsharpHandlers::FormSubmit.Handler::accept",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "dotnetcore2.1",
        "Timeout": 6,
        "Description": "Accept form submission",
        "Tags": [
          {
            "Key": "owner",
            "Value": "sunder"
          },
          {
            "Key": "name",
            "Value": "formSubmit"
          }
        ]
      },
      "DependsOn": [
        "AcceptMesgLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AcceptMesgLambdaVersion3Rg8qupbNRXlssymB7VZo6W7PTFbso8n03cI0ccfAU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AcceptMesgLambdaFunction"
        },
        "CodeSha256": "GBWh0KwxD0iPby9qFUCD7qSFBWqMt44E4uLn3oUBkz0=",
        "Description": "Accept form submission"
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "production-formSubmit",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceMessage": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "message",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodMessagePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {
          "method.request.querystring.email": true,
          "method.request.querystring.phone": false
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceMessage"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AcceptMesgLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1537077371703": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "production"
      },
      "DependsOn": [
        "ApiGatewayMethodMessagePost"
      ]
    },
    "ApiGatewayApiKey1": {
      "Type": "AWS::ApiGateway::ApiKey",
      "Properties": {
        "Enabled": true,
        "Name": "formSubmit-production-key",
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "production"
          }
        ]
      },
      "DependsOn": "ApiGatewayDeployment1537077371703"
    },
    "ApiGatewayUsagePlan": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "DependsOn": "ApiGatewayDeployment1537077371703",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Stage": "production"
          }
        ],
        "Description": "Usage plan for formSubmit production stage",
        "UsagePlanName": "formSubmit-production",
        "Quota": {
          "Limit": 1000,
          "Offset": 2,
          "Period": "MONTH"
        },
        "Throttle": {
          "BurstLimit": 100,
          "RateLimit": 100
        }
      }
    },
    "ApiGatewayUsagePlanKey1": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "Properties": {
        "KeyId": {
          "Ref": "ApiGatewayApiKey1"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "ApiGatewayUsagePlan"
        }
      }
    },
    "AcceptMesgLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceptMesgLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "sls-lambda-deploys-dev"
    },
    "AcceptMesgLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AcceptMesgLambdaVersion3Rg8qupbNRXlssymB7VZo6W7PTFbso8n03cI0ccfAU"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/production"
          ]
        ]
      }
    }
  }
}